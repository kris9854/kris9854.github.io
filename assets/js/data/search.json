[ { "title": "Apache/HTTPD Helper", "url": "/posts/apache-help/", "categories": "Guide, Information", "tags": "apache, webpage", "date": "2022-11-15 20:10:00 +0100", "snippet": "Reminder of RewriteRule flags : RewriteRule Flags What it does     L Last. Stop processing RewriteRules once this one matches. Order counts!     C Chain. Continue processing the next RewriteRule. If this rule doesn’t match, then the next rule won’t be executed. More on this later.   E Set environmental variable. Apache has various environmental variables that can affect web-server behavior.     F Forbidden. Returns a 403-Forbidden error if this rule matches.     G Gone. Returns a 410-Gone error if this rule matches.     H Handler. Forces the request to be handled as if it were the specified MIME-type.     N Next. Forces the rule to start over again and re-match. BE CAREFUL! Loops can result.     NC No case. Allows [jpg] to match both jpg and JPG.     NE No escape. Prevents the rewriting of special characters (. ? # &amp; etc) into their hex-code equivalents.     NS No subrequests. If you’re using server-side-includes, this will prevent matches to the included files.     P Proxy. Forces the rule to be handled by mod_proxy. Transparently provide content from other servers, because your web-server fetches it and re-serves it. This is a dangerous flag, as a poorly written one will turn your web-server into an open-proxy and That is Bad.   PT Pass Through. Take into account Alias statements in RewriteRule matching.     QSA QSAppend. When the original string contains a query (http://example.com/thing?asp foo) append the original query string to the rewritten string. Normally it would be discarded. Important for dynamic content. R Redirect. Provide an HTTP redirect to the specified URL. Can also provide exact redirect code [R 303]. Very similar to RedirectMatch, which is faster and should be used when possible. S Skip. Skip this rule.     T Type. Specify the mime-type of the returned content. Very similar to the AddType directive.     ExampleRewriteCond %{HTTP_HOST} ^[^.]+\\.[^.]+$ [NC]RewriteRule ^ https://www.%{HTTP_HOST}%{REQUEST_URI} [R=301,L,NE]Example 1 - Redirect example.com to www.example.com:RewriteEngine OnRewriteCond %{HTTP_HOST} !^www.example.com$ [NC]RewriteRule ^(.*)$ http://www.example.com/$1 [L,R=301]Example 2 - Redirect www.example.com to example.com:RewriteEngine onRewriteCond %{HTTP_HOST} ^www\\.example\\.com$RewriteRule ^/?$ \"http\\:\\/\\/example\\.com\\/\" [R=301,L]Links: Help on rewrite" }, { "title": "Development machine setup", "url": "/posts/how_to_set_up_dev_env/", "categories": "Guide, Environment", "tags": "Git, help", "date": "2022-09-27 19:00:00 +0200", "snippet": "Development SetupIn this guide I will provice information on how I setup my development environment. I was using WSL 2 for long, but as my demand for communicating between multiple Virtual machines. My lab consists of the following machines: Machine name OS Purpose Code: alma09.lab.local Alma Linux 9 Ansible control node / git / git signing profiles Code: win2019.lab.local windows Server 2019 PowerShell / git / git signing profiles almatest01.lab.local Alma Linux 9 Ansible Test node windc01.lab.local Windows Server 2019 Ansible Test node and LAB DC Setup Install linux vm on hyper-v (or other) - At installation choose container tools and set hostname to alma09.lab.local (example) ```bash eval NEW_USER_NAME=dev-ansible sudo yum upgrade -y &amp;&amp; sudo yum update -y echo /etc/sudoers.d/$NEW_USER_NAME &gt;&gt; $NEW_USER_NAME ALL=(ALL) NOPASSWD:ALL sudo useradd $NEW_USER_NAME passwd $NEW_USER_NAME ``` - Then Setup the env for the new user ```bash eval NEW_USER_NAME=dev-ansible mkdir --parents ~/github ~/github/ansible_repos ~/github/ansible_roles ~/github/repo ~/.ssh touch ~/.ssh/authorized_keys ``` To generate a GPG key you can do the following:sudo yum install pinentrygpg --full-generate-key# NEEDS TO BE GITHUB USER AND MAIL + minimum 4096 bitsgpg --list-secret-keys --keyid-format=long# the keyid is the first after sec rsa4096/KEYIDHERE 20xxgpg --armor --export keyid# upload to github# to sign commits git commit -s -S -m \"Code update message\"The Ansible01 machines has been setup so that I can connect through VS: Code towards that. I have setup ssh and gpg keys so that I can sign my commits towards Github.My ~/.gitconfig file has the following setup:[user] email = redacted name = redacted signingkey = redacted[commit] gpgsign = true[alias] c = commit -s -S[trailer \"sign\"] key = \"Signed-off-by:\" ifmissing = add ifexist =doNothing command= echo \"$(git config user.name) &lt;$(git config user.email&gt;\" In your .bash_profileeval NEW_USER=kit-ansible#CONFIGS FILEScat &lt;&lt;EOT &gt;&gt; ~/.gnupg/gpg.confdefault-key [GPG-KEY-ID]use-agentEOTcat &lt;&lt;EOT &gt;&gt; ~/.gnupg/gpg-agent.conf use-standard-socketdefault-cache-ttl 600write-env-file /Users/$NEW_USER/.gnupg/gpg-agent-infopinentry-program /usr/bin/pinentryEOTcat &lt;&lt;EOT &gt;&gt; ~/.bash_profile# SSH AGENTeval $(ssh-agent)# ANSIBLE SETTINGS:eval DEFAULT_ROLES_PATH=~/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles:~/github/ansible_rolesexport GPG_TTY=$(tty)[ -f ~/.gnupg/gpg-agent-info ] &amp;&amp; source ~/.gnupg/gpg-agent-infoif [ -S \"${GPG_AGENT_INFO%%:*}\" ]; then export GPG_AGENT_INFOelse eval $( gpg-agent --daemon --options ~/.gnupg/gpg-agent.conf --write-env-file ~/.gnupg/gpg-agent-info )fiEOT#REFRESHkillall gpg-agent. ~/.bash_profile" }, { "title": "Advanced Markdown Features", "url": "/posts/how_to_markdown/", "categories": "Guide, Information", "tags": "it, software, html, markdown", "date": "2022-09-23 21:16:00 +0200", "snippet": "MarkdownMarkdown is a text-to-HTML conversion tool for web writers. Markdown allows you to write using an easy-to-read, easy-to-write plain text format, then convert it to structurally valid XHTML (or HTML).Documentation: Markdown DocsRFC: RFC 7763GitHub Documentation: Writing Markdown on GitHubCheat-SheetHeadings# Heading 1## Heading 2### Heading 3#### Heading 4##### Heading 5###### Heading 6Here is a heading: # Heading, don’t do this: #HeadingEmphasisEmphasis, aka italics, with *asterisks* or _underscores_.Strong emphasis, aka bold, with **asterisks** or __underscores__.Combined emphasis with **asterisks and _underscores_**.Strikethrough uses two tildes. ~~Scratch this.~~Line BreaksFirst line with two spaces after. And the next line.ListsOrdered Lists1. First item2. Second item3. Third itemUnordered Lists- First item- Second item- Third itemLinksLink with text: [link-text](https://www.google.com)ImagesImage with alt text: ![alt-text](https://camo.githubusercontent.com/4d89cd791580bfb19080f8b0844ba7e1235aa4becc3f43dfd708a769e257d8de/68747470733a2f2f636e642d70726f642d312e73332e75732d776573742d3030342e6261636b626c617a6562322e636f6d2f6e65772d62616e6e6572342d7363616c65642d666f722d6769746875622e6a7067)Image without alt text: ![](https://camo.githubusercontent.com/4d89cd791580bfb19080f8b0844ba7e1235aa4becc3f43dfd708a769e257d8de/68747470733a2f2f636e642d70726f642d312e73332e75732d776573742d3030342e6261636b626c617a6562322e636f6d2f6e65772d62616e6e6572342d7363616c65642d666f722d6769746875622e6a7067)Code BlocksInline Code BlockInline `code` has `back-ticks around` it.Blocks of Code```javascriptvar s = \"JavaScript syntax highlighting\";alert(s);``` ```pythons = \"Python syntax highlighting\"print s``` ```No language indicated, so no syntax highlighting. But let's throw in a tag.```TablesThere must be at least 3 dashes separating each header cell.The outer pipes (|) are optional, and you don’t need to make the raw Markdown line up prettily.| Heading 1 | Heading 2 | Heading 3 ||---|---|---|| col1 | col2 | col3 || col1 | col2 | col3 |" }, { "title": "Windows ssh-copy-id", "url": "/posts/Windows-ssh-copy-id/", "categories": "Blogging, Tutorial", "tags": "Windows, ssh", "date": "2022-09-11 17:34:00 +0200", "snippet": "Windows OpenSSH equivalent of ssh-copy-idssh-copy-id is a awesome command to copy a ssh-key to a remote server.It copies the public key of your ssh key to the remote server, making you able to login without using a password.On linux normally you would use the ssh-copy-id command, but this command doesn’t work for Windows. Therefore you should use the following command for windows. ONLY copies the public key to the remote host # Copy id_rsa.pub to the remote aiuthorized serverget-content $env:USERPROFILE\\.ssh\\id_rsa.pub | ssh USER@IP-ADDRESS \"cat &gt;&gt; .ssh/authorized_keys\" And to copy from linux to linux machine use this command: It only copies the public key to the remote host ssh-copy-id -i ~/.ssh/id_rsa USER@IP-ADDRESS " }, { "title": "SSL-security", "url": "/posts/2022-ssl-security/", "categories": "Cheat-Sheett, ssl-certs", "tags": "www, security, xcad2k", "date": "2022-09-10 19:00:00 +0200", "snippet": "SSL Security Cheat-Sheet… TBDTLS Version and CiphersScanning for TLS Version and supported Ciphers: nmap --script ssl-enum-ciphers &lt;target&gt; Tool Link Description Qualys SSL Labs https://www.ssllabs.com/projects/index.html SSL Security Tools by Qualys " }, { "title": "SSL-Certs", "url": "/posts/2022-ssl-certs/", "categories": "Cheat-Sheet, ssl-certs", "tags": "www, help, xcad2k", "date": "2022-09-10 19:00:00 +0200", "snippet": "SSL Certificates Cheat-SheetX.509 is an ITU standard defining the format of public key certificates. X.509 are used in TLS/SSL, which is the basis for HTTPS. An X.509 certificate binds an identity to a public key using a digital signature. A certificate contains an identity (hostname, organization, etc.) and a public key (RSA, DSA, ECDSA, ed25519, etc.), and is either signed by a Certificate Authority or is Self-Signed.Self-Signed CertificatesGenerate CA Generate RSA openssl genrsa -aes256 -out ca-key.pem 4096 Generate a public CA Cert openssl req -new -x509 -sha256 -days 365 -key ca-key.pem -out ca.pem Generate Certificate Create a RSA key openssl genrsa -out cert-key.pem 4096 Create a Certificate Signing Request (CSR) openssl req -new -sha256 -subj \"/CN=yourcn\" -key cert-key.pem -out cert.csr Create a extfile with all the alternative names echo \"subjectAltName=DNS:your-dns.record,IP:257.10.10.1\" &gt;&gt; extfile.cnf # optionalecho extendedKeyUsage = serverAuth &gt;&gt; extfile.cnf Create the certificate openssl x509 -req -sha256 -days 365 -in cert.csr -CA ca.pem -CAkey ca-key.pem -out cert.pem -extfile extfile.cnf -CAcreateserial Certificate FormatsX.509 Certificates exist in Base64 Formats PEM (.pem, .crt, .ca-bundle), PKCS#7 (.p7b, p7s) and Binary Formats DER (.der, .cer), PKCS#12 (.pfx, p12).Convert Certs COMMAND CONVERSION openssl x509 -outform der -in cert.pem -out cert.der PEM to DER openssl x509 -inform der -in cert.der -out cert.pem DER to PEM openssl pkcs12 -in cert.pfx -out cert.pem -nodes PFX to PEM Verify Certificatesopenssl verify -CAfile ca.pem -verbose cert.pemInstall the CA Cert as a trusted root CAOn Debian &amp; Derivatives Move the CA certificate (ca.pem) into /usr/local/share/ca-certificates/ca.crt. Update the Cert Store with: sudo update-ca-certificates Refer the documentation here and here.On Fedora Move the CA certificate (ca.pem) to /etc/pki/ca-trust/source/anchors/ca.pem or /usr/share/pki/ca-trust-source/anchors/ca.pem Now run (with sudo if necessary): update-ca-trust Refer the documentation here.On ArchSystem-wide – Arch(p11-kit)(From arch wiki) Run (As root) trust anchor --store myCA.crt The certificate will be written to /etc/ca-certificates/trust-source/myCA.p11-kit and the “legacy” directories automatically updated. If you get “no configured writable location” or a similar error, import the CA manually: Copy the certificate to the /etc/ca-certificates/trust-source/anchors directory. and then update-ca-trust wiki page here On WindowsAssuming the path to your generated CA certificate as C:\\ca.pem, run:Import-Certificate -FilePath \"C:\\ca.pem\" -CertStoreLocation Cert:\\LocalMachine\\Root Set -CertStoreLocation to Cert:\\CurrentUser\\Root in case you want to trust certificates only for the logged in user.ORIn Command Prompt, run:certutil.exe -addstore root C:\\ca.pem certutil.exe is a built-in tool (classic System32 one) and adds a system-wide trust anchor.On AndroidThe exact steps vary device-to-device, but here is a generalised guide: Open Phone Settings Locate Encryption and Credentials section. It is generally found under Settings &gt; Security &gt; Encryption and Credentials Choose Install a certificate Choose CA Certificate Locate the certificate file ca.pem on your SD Card/Internal Storage using the file manager. Select to load it. Done!" }, { "title": "HTTP status codes", "url": "/posts/2022-http-status-codes/", "categories": "Cheat sheet, Developer", "tags": "www, help, xcad2k", "date": "2022-09-10 19:00:00 +0200", "snippet": "HTTP Status CodesCategories 1XX status codes: Informational Requests 2XX status codes: Successful Requests 3XX status codes: Redirects 4XX status codes: Client Errors 5XX status codes: Server ErrorsComplete List Code Name Description 100 Continue Everything so far is OK and that the client should continue with the request or ignore it if it is already finished. 101 Switching Protocols The client has asked the server to change protocols and the server has agreed to do so. 102 Processing The server has received and is processing the request, but that it does not have a final response yet. 103 Early Hints Used to return some response headers before final HTTP message. 200 OK Successful request. 201 Created The server acknowledged the created resource. 202 Accepted The client’s request has been received but the server is still processing it. 203 Non-Authoritative Information The response that the server sent to the client is not the same as it was when the server sent it. 204 No Content There is no content to send for this request 205 Reset Content Tells the user agent to reset the document which sent this request. 206 Partial Content This response code is used when the range-header is sent from the client to request only part of a resource. 207 Multi-Status Conveys information about multiple resources, for situations where multiple status codes might be appropriate. 208 Already Reported The members of a DAV binding have already been enumerated in a preceding part of the multi-status response. 226 IM Used IM is a specific extension of the HTTP protocol. The extension allows a HTTP server to send diffs (changes) of resources to clients. 300 Multiple Choices The request has more than one possible response. The user agent should choose one. 301 Moved Permanently The URL of the requested resource has been changed permanently. The new URL is given in the response. 302 Found This response code means that the URI of requested resource has been changed temporarily 303 See Other The server sent this response to direct the client to get the requested resource at another URI with a GET request. 304 Not Modified It tells the client that the response has not been modified, so the client can continue to use the same cached version of the response. 305 Use Proxy Defined in a previous version of the HTTP specification to indicate that a requested response must be accessed by a proxy. (discontinued) 307 Temporary Redirect The server sends this response to direct the client to get the requested resource at another URI with same method that was used in the prior request. 308 Permanent Redirect This means that the resource is now permanently located at another URI, specified by the Location: HTTP Response header. 400 Bad Request The server could not understand the request 401 Unauthorized The client didn’t authenticate himself. 402 Payment Required This response code is reserved for future use. The initial aim for creating this code was using it for digital payment systems, however this status code is used very rarely and no standard convention exists. 403 Forbidden The client does not have access rights to the content 404 Not Found The server can not find the requested resource 405 Method Not Allowed The request method is known by the server but is not supported by the target resource 406 Not Acceptable The reponse doens’t conforms to the creteria given by the client 407 Proxy Authentication Required This is similar to 401 Unauthorized but authentication is needed to be done by a proxy. 408 Request Timeout This response is sent on an idle connection by some servers, even without any previous request by the client. 409 Conflict This response is sent when a request conflicts with the current state of the server. 410 Gone This response is sent when the requested content has been permanently deleted from server, with no forwarding address. 411 Length Required Server rejected the request because the Content-Length header field is not defined and the server requires it. 412 Precondition Failed Access to the target resource has been denied. 413 Payload Too Large Request entity is larger than limits defined by server. 414 Request-URI Too Long The URI requested by the client is longer than the server is willing to interpret. 415 Unsupported Media Type The media format is not supported by the server. 416 Requested Range Not Satisfiable The range specified by the Range header field in the request cannot be fulfilled. 417 Expectation Failed the expectation indicated by the Expect request header field cannot be met by the server. 418 I’m a teapot The server refuses the attempt to brew coffee with a teapot. 421 Misdirected Request The request was directed at a server that is not able to produce a response. 422 Unprocessable Entity The request was well-formed but was unable to be followed due to semantic errors. 423 Locked The resource that is being accessed is locked. 424 Failed Dependency The request failed due to failure of a previous request. 426 Upgrade Required The server refuses to perform the request using the current protocol but might be willing to do so after the client upgrades to a different protocol. 428 Precondition Required his response is intended to prevent the ‘lost update’ problem, where a client GETs a resource’s state, modifies it and PUTs it back to the server, when meanwhile a third party has modified the state on the server, leading to a conflict. 429 Too Many Requests The user has sent too many requests in a given amount of time 431 Request Header Fields Too Large The server is can’t process the request because its header fields are too large. 444 Connection Closed Without Response The connection opened, but no data was written. 451 Unavailable For Legal Reasons The user agent requested a resource that cannot legally be provided (such as a web page censored by a government) 499 Client Closed Request The client closed the connection, despite the server was processing the request already. 500 Internal Server Error The server has encountered a situation it does not know how to handle. 501 Not Implemented The request method is not supported by the server and cannot be handled. 502 Bad Gateway This error response means that the server, while working as a gateway to get a response needed to handle the request, got an invalid response. 503 Service Unavailable The server is not ready to handle the request. 504 Gateway Timeout This error response is given when the server is acting as a gateway and cannot get a response in time. 505 HTTP Version Not Supported The HTTP version used in the request is not supported by the server. 506 Variant Also Negotiates the chosen variant resource is configured to engage in transparent content negotiation itself, and is therefore not a proper end point in the negotiation process. 507 Insufficient Storage The method could not be performed on the resource because the server is unable to store the representation needed to successfully complete the request. 508 Loop Detected The server detected an infinite loop while processing the request. 510 Not Extended Further extensions to the request are required for the server to fulfill it. 511 Network Authentication Required Indicates that the client needs to authenticate to gain network access. 599 Network Connect Timeout Error The connection timed out due to a overloaded server, a hardware error or a infrastructure error. " }, { "title": "Windows Environments Variables", "url": "/posts/2022-environment-variables/", "categories": "Cheat-sheet, Windows", "tags": "Env, help, xcad2k", "date": "2022-09-10 19:00:00 +0200", "snippet": "Environment Variables in WindowsHow to use them in PowerShellEnvironment Varaibles can be used in PowerShell ([[powershell]]) with the prefix $env:.Example:*Variable: %APPDATA%In Powershell: $env:APPDATAList of environment variables Variable Description %ALLUSERSPROFILE% C:\\ProgramData %APPDATA% C:\\Users{username}\\AppData\\Roaming %COMMONPROGRAMFILES% C:\\Program Files\\Common Files %COMMONPROGRAMFILES(x86)% C:\\Program Files (x86)\\Common Files %CommonProgramW6432% C:\\Program Files\\Common Files %COMSPEC% C:\\Windows\\System32\\cmd.exe %HOMEDRIVE% C:\\ %HOMEPATH% C:\\Users{username} %LOCALAPPDATA% C:\\Users{username}\\AppData\\Local %LOGONSERVER% \\{domain_logon_server} %PATH% C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem %PathExt% .com;.exe;.bat;.cmd;.vbs;.vbe;.js;.jse;.wsf;.wsh;.msc %PROGRAMDATA% C:\\ProgramData %PROGRAMFILES% C:\\Program Files %ProgramW6432% C:\\Program Files %PROGRAMFILES(X86)% C:\\Program Files (x86) %PROMPT% $P$G %SystemDrive% C: %SystemRoot% C:\\Windows %TEMP% C:\\Users{username}\\AppData\\Local\\Temp %TMP% C:\\Users{username}\\AppData\\Local\\Temp %USERDOMAIN% Userdomain associated with current user. %USERDOMAIN_ROAMINGPROFILE% Userdomain associated with roaming profile. %USERNAME% {username} %USERPROFILE% C:\\Users{username} %WINDIR% C:\\Windows %PUBLIC% C:\\Users\\Public %PSModulePath% %SystemRoot%\\system32\\WindowsPowerShell\\v1.0\\Modules\\ %OneDrive% C:\\Users{username}\\OneDrive %DriverData% C:\\Windows\\System32\\Drivers\\DriverData %CD% Outputs current directory path. (Command Prompt.) %CMDCMDLINE% Outputs command line used to launch current Command Prompt session. (Command Prompt.) %CMDEXTVERSION% Outputs the number of current command processor extensions. (Command Prompt.) %COMPUTERNAME% Outputs the system name. %DATE% Outputs current date. (Command Prompt.) %TIME% Outputs time. (Command Prompt.) %ERRORLEVEL% Outputs the number of defining exit status of previous command. (Command Prompt.) %PROCESSOR_IDENTIFIER% Outputs processor identifier. %PROCESSOR_LEVEL% Outputs processor level. %PROCESSOR_REVISION% Outputs processor revision. %NUMBER_OF_PROCESSORS% Outputs the number of physical and virtual cores. %RANDOM% Outputs random number from 0 through 32767. %OS% Windows_NT " }, { "title": "Color Codes", "url": "/posts/2022-color-codes/", "categories": "Cheat-Sheet, Developer", "tags": "www, help, xcad2k", "date": "2022-09-10 19:00:00 +0200", "snippet": "256 Color Codes Cheat-SheetColors 0-15 are Xterm system colors. Xterm Number Xterm Name HEX RGB HSL 0 Black (SYSTEM) #000000 rgb(0,0,0) hsl(0,0%,0%) 1 Maroon (SYSTEM) #800000 rgb(128,0,0) hsl(0,100%,25%) 2 Green (SYSTEM) #008000 rgb(0,128,0) hsl(120,100%,25%) 3 Olive (SYSTEM) #808000 rgb(128,128,0) hsl(60,100%,25%) 4 Navy (SYSTEM) #000080 rgb(0,0,128) hsl(240,100%,25%) 5 Purple (SYSTEM) #800080 rgb(128,0,128) hsl(300,100%,25%) 6 Teal (SYSTEM) #008080 rgb(0,128,128) hsl(180,100%,25%) 7 Silver (SYSTEM) #c0c0c0 rgb(192,192,192) hsl(0,0%,75%) 8 Grey (SYSTEM) #808080 rgb(128,128,128) hsl(0,0%,50%) 9 Red (SYSTEM) #ff0000 rgb(255,0,0) hsl(0,100%,50%) 10 Lime (SYSTEM) #00ff00 rgb(0,255,0) hsl(120,100%,50%) 11 Yellow (SYSTEM) #ffff00 rgb(255,255,0) hsl(60,100%,50%) 12 Blue (SYSTEM) #0000ff rgb(0,0,255) hsl(240,100%,50%) 13 Fuchsia (SYSTEM) #ff00ff rgb(255,0,255) hsl(300,100%,50%) 14 Aqua (SYSTEM) #00ffff rgb(0,255,255) hsl(180,100%,50%) 15 White (SYSTEM) #ffffff rgb(255,255,255) hsl(0,0%,100%) 16 Grey0 #000000 rgb(0,0,0) hsl(0,0%,0%) 17 NavyBlue #00005f rgb(0,0,95) hsl(240,100%,18%) 18 DarkBlue #000087 rgb(0,0,135) hsl(240,100%,26%) 19 Blue3 #0000af rgb(0,0,175) hsl(240,100%,34%) 20 Blue3 #0000d7 rgb(0,0,215) hsl(240,100%,42%) 21 Blue1 #0000ff rgb(0,0,255) hsl(240,100%,50%) 22 DarkGreen #005f00 rgb(0,95,0) hsl(120,100%,18%) 23 DeepSkyBlue4 #005f5f rgb(0,95,95) hsl(180,100%,18%) 24 DeepSkyBlue4 #005f87 rgb(0,95,135) hsl(97,100%,26%) 25 DeepSkyBlue4 #005faf rgb(0,95,175) hsl(07,100%,34%) 26 DodgerBlue3 #005fd7 rgb(0,95,215) hsl(13,100%,42%) 27 DodgerBlue2 #005fff rgb(0,95,255) hsl(17,100%,50%) 28 Green4 #008700 rgb(0,135,0) hsl(120,100%,26%) 29 SpringGreen4 #00875f rgb(0,135,95) hsl(62,100%,26%) 30 Turquoise4 #008787 rgb(0,135,135) hsl(180,100%,26%) 31 DeepSkyBlue3 #0087af rgb(0,135,175) hsl(93,100%,34%) 32 DeepSkyBlue3 #0087d7 rgb(0,135,215) hsl(02,100%,42%) 33 DodgerBlue1 #0087ff rgb(0,135,255) hsl(08,100%,50%) 34 Green3 #00af00 rgb(0,175,0) hsl(120,100%,34%) 35 SpringGreen3 #00af5f rgb(0,175,95) hsl(52,100%,34%) 36 DarkCyan #00af87 rgb(0,175,135) hsl(66,100%,34%) 37 LightSeaGreen #00afaf rgb(0,175,175) hsl(180,100%,34%) 38 DeepSkyBlue2 #00afd7 rgb(0,175,215) hsl(91,100%,42%) 39 DeepSkyBlue1 #00afff rgb(0,175,255) hsl(98,100%,50%) 40 Green3 #00d700 rgb(0,215,0) hsl(120,100%,42%) 41 SpringGreen3 #00d75f rgb(0,215,95) hsl(46,100%,42%) 42 SpringGreen2 #00d787 rgb(0,215,135) hsl(57,100%,42%) 43 Cyan3 #00d7af rgb(0,215,175) hsl(68,100%,42%) 44 DarkTurquoise #00d7d7 rgb(0,215,215) hsl(180,100%,42%) 45 Turquoise2 #00d7ff rgb(0,215,255) hsl(89,100%,50%) 46 Green1 #00ff00 rgb(0,255,0) hsl(120,100%,50%) 47 SpringGreen2 #00ff5f rgb(0,255,95) hsl(42,100%,50%) 48 SpringGreen1 #00ff87 rgb(0,255,135) hsl(51,100%,50%) 49 MediumSpringGreen #00ffaf rgb(0,255,175) hsl(61,100%,50%) 50 Cyan2 #00ffd7 rgb(0,255,215) hsl(70,100%,50%) 51 Cyan1 #00ffff rgb(0,255,255) hsl(180,100%,50%) 52 DarkRed #5f0000 rgb(95,0,0) hsl(0,100%,18%) 53 DeepPink4 #5f005f rgb(95,0,95) hsl(300,100%,18%) 54 Purple4 #5f0087 rgb(95,0,135) hsl(82,100%,26%) 55 Purple4 #5f00af rgb(95,0,175) hsl(72,100%,34%) 56 Purple3 #5f00d7 rgb(95,0,215) hsl(66,100%,42%) 57 BlueViolet #5f00ff rgb(95,0,255) hsl(62,100%,50%) 58 Orange4 #5f5f00 rgb(95,95,0) hsl(60,100%,18%) 59 Grey37 #5f5f5f rgb(95,95,95) hsl(0,0%,37%) 60 MediumPurple4 #5f5f87 rgb(95,95,135) hsl(240,17%,45%) 61 SlateBlue3 #5f5faf rgb(95,95,175) hsl(240,33%,52%) 62 SlateBlue3 #5f5fd7 rgb(95,95,215) hsl(240,60%,60%) 63 RoyalBlue1 #5f5fff rgb(95,95,255) hsl(240,100%,68%) 64 Chartreuse4 #5f8700 rgb(95,135,0) hsl(7,100%,26%) 65 DarkSeaGreen4 #5f875f rgb(95,135,95) hsl(120,17%,45%) 66 PaleTurquoise4 #5f8787 rgb(95,135,135) hsl(180,17%,45%) 67 SteelBlue #5f87af rgb(95,135,175) hsl(210,33%,52%) 68 SteelBlue3 #5f87d7 rgb(95,135,215) hsl(220,60%,60%) 69 CornflowerBlue #5f87ff rgb(95,135,255) hsl(225,100%,68%) 70 Chartreuse3 #5faf00 rgb(95,175,0) hsl(7,100%,34%) 71 DarkSeaGreen4 #5faf5f rgb(95,175,95) hsl(120,33%,52%) 72 CadetBlue #5faf87 rgb(95,175,135) hsl(150,33%,52%) 73 CadetBlue #5fafaf rgb(95,175,175) hsl(180,33%,52%) 74 SkyBlue3 #5fafd7 rgb(95,175,215) hsl(200,60%,60%) 75 SteelBlue1 #5fafff rgb(95,175,255) hsl(210,100%,68%) 76 Chartreuse3 #5fd700 rgb(95,215,0) hsl(3,100%,42%) 77 PaleGreen3 #5fd75f rgb(95,215,95) hsl(120,60%,60%) 78 SeaGreen3 #5fd787 rgb(95,215,135) hsl(140,60%,60%) 79 Aquamarine3 #5fd7af rgb(95,215,175) hsl(160,60%,60%) 80 MediumTurquoise #5fd7d7 rgb(95,215,215) hsl(180,60%,60%) 81 SteelBlue1 #5fd7ff rgb(95,215,255) hsl(195,100%,68%) 82 Chartreuse2 #5fff00 rgb(95,255,0) hsl(7,100%,50%) 83 SeaGreen2 #5fff5f rgb(95,255,95) hsl(120,100%,68%) 84 SeaGreen1 #5fff87 rgb(95,255,135) hsl(135,100%,68%) 85 SeaGreen1 #5fffaf rgb(95,255,175) hsl(150,100%,68%) 86 Aquamarine1 #5fffd7 rgb(95,255,215) hsl(165,100%,68%) 87 DarkSlateGray2 #5fffff rgb(95,255,255) hsl(180,100%,68%) 88 DarkRed #870000 rgb(135,0,0) hsl(0,100%,26%) 89 DeepPink4 #87005f rgb(135,0,95) hsl(17,100%,26%) 90 DarkMagenta #870087 rgb(135,0,135) hsl(300,100%,26%) 91 DarkMagenta #8700af rgb(135,0,175) hsl(86,100%,34%) 92 DarkViolet #8700d7 rgb(135,0,215) hsl(77,100%,42%) 93 Purple #8700ff rgb(135,0,255) hsl(71,100%,50%) 94 Orange4 #875f00 rgb(135,95,0) hsl(2,100%,26%) 95 LightPink4 #875f5f rgb(135,95,95) hsl(0,17%,45%) 96 Plum4 #875f87 rgb(135,95,135) hsl(300,17%,45%) 97 MediumPurple3 #875faf rgb(135,95,175) hsl(270,33%,52%) 98 MediumPurple3 #875fd7 rgb(135,95,215) hsl(260,60%,60%) 99 SlateBlue1 #875fff rgb(135,95,255) hsl(255,100%,68%) 100 Yellow4 #878700 rgb(135,135,0) hsl(60,100%,26%) 101 Wheat4 #87875f rgb(135,135,95) hsl(60,17%,45%) 102 Grey53 #878787 rgb(135,135,135) hsl(0,0%,52%) 103 LightSlateGrey #8787af rgb(135,135,175) hsl(240,20%,60%) 104 MediumPurple #8787d7 rgb(135,135,215) hsl(240,50%,68%) 105 LightSlateBlue #8787ff rgb(135,135,255) hsl(240,100%,76%) 106 Yellow4 #87af00 rgb(135,175,0) hsl(3,100%,34%) 107 DarkOliveGreen3 #87af5f rgb(135,175,95) hsl(90,33%,52%) 108 DarkSeaGreen #87af87 rgb(135,175,135) hsl(120,20%,60%) 109 LightSkyBlue3 #87afaf rgb(135,175,175) hsl(180,20%,60%) 110 LightSkyBlue3 #87afd7 rgb(135,175,215) hsl(210,50%,68%) 111 SkyBlue2 #87afff rgb(135,175,255) hsl(220,100%,76%) 112 Chartreuse2 #87d700 rgb(135,215,0) hsl(2,100%,42%) 113 DarkOliveGreen3 #87d75f rgb(135,215,95) hsl(100,60%,60%) 114 PaleGreen3 #87d787 rgb(135,215,135) hsl(120,50%,68%) 115 DarkSeaGreen3 #87d7af rgb(135,215,175) hsl(150,50%,68%) 116 DarkSlateGray3 #87d7d7 rgb(135,215,215) hsl(180,50%,68%) 117 SkyBlue1 #87d7ff rgb(135,215,255) hsl(200,100%,76%) 118 Chartreuse1 #87ff00 rgb(135,255,0) hsl(8,100%,50%) 119 LightGreen #87ff5f rgb(135,255,95) hsl(105,100%,68%) 120 LightGreen #87ff87 rgb(135,255,135) hsl(120,100%,76%) 121 PaleGreen1 #87ffaf rgb(135,255,175) hsl(140,100%,76%) 122 Aquamarine1 #87ffd7 rgb(135,255,215) hsl(160,100%,76%) 123 DarkSlateGray1 #87ffff rgb(135,255,255) hsl(180,100%,76%) 124 Red3 #af0000 rgb(175,0,0) hsl(0,100%,34%) 125 DeepPink4 #af005f rgb(175,0,95) hsl(27,100%,34%) 126 MediumVioletRed #af0087 rgb(175,0,135) hsl(13,100%,34%) 127 Magenta3 #af00af rgb(175,0,175) hsl(300,100%,34%) 128 DarkViolet #af00d7 rgb(175,0,215) hsl(88,100%,42%) 129 Purple #af00ff rgb(175,0,255) hsl(81,100%,50%) 130 DarkOrange3 #af5f00 rgb(175,95,0) hsl(2,100%,34%) 131 IndianRed #af5f5f rgb(175,95,95) hsl(0,33%,52%) 132 HotPink3 #af5f87 rgb(175,95,135) hsl(330,33%,52%) 133 MediumOrchid3 #af5faf rgb(175,95,175) hsl(300,33%,52%) 134 MediumOrchid #af5fd7 rgb(175,95,215) hsl(280,60%,60%) 135 MediumPurple2 #af5fff rgb(175,95,255) hsl(270,100%,68%) 136 DarkGoldenrod #af8700 rgb(175,135,0) hsl(6,100%,34%) 137 LightSalmon3 #af875f rgb(175,135,95) hsl(30,33%,52%) 138 RosyBrown #af8787 rgb(175,135,135) hsl(0,20%,60%) 139 Grey63 #af87af rgb(175,135,175) hsl(300,20%,60%) 140 MediumPurple2 #af87d7 rgb(175,135,215) hsl(270,50%,68%) 141 MediumPurple1 #af87ff rgb(175,135,255) hsl(260,100%,76%) 142 Gold3 #afaf00 rgb(175,175,0) hsl(60,100%,34%) 143 DarkKhaki #afaf5f rgb(175,175,95) hsl(60,33%,52%) 144 NavajoWhite3 #afaf87 rgb(175,175,135) hsl(60,20%,60%) 145 Grey69 #afafaf rgb(175,175,175) hsl(0,0%,68%) 146 LightSteelBlue3 #afafd7 rgb(175,175,215) hsl(240,33%,76%) 147 LightSteelBlue #afafff rgb(175,175,255) hsl(240,100%,84%) 148 Yellow3 #afd700 rgb(175,215,0) hsl(1,100%,42%) 149 DarkOliveGreen3 #afd75f rgb(175,215,95) hsl(80,60%,60%) 150 DarkSeaGreen3 #afd787 rgb(175,215,135) hsl(90,50%,68%) 151 DarkSeaGreen2 #afd7af rgb(175,215,175) hsl(120,33%,76%) 152 LightCyan3 #afd7d7 rgb(175,215,215) hsl(180,33%,76%) 153 LightSkyBlue1 #afd7ff rgb(175,215,255) hsl(210,100%,84%) 154 GreenYellow #afff00 rgb(175,255,0) hsl(8,100%,50%) 155 DarkOliveGreen2 #afff5f rgb(175,255,95) hsl(90,100%,68%) 156 PaleGreen1 #afff87 rgb(175,255,135) hsl(100,100%,76%) 157 DarkSeaGreen2 #afffaf rgb(175,255,175) hsl(120,100%,84%) 158 DarkSeaGreen1 #afffd7 rgb(175,255,215) hsl(150,100%,84%) 159 PaleTurquoise1 #afffff rgb(175,255,255) hsl(180,100%,84%) 160 Red3 #d70000 rgb(215,0,0) hsl(0,100%,42%) 161 DeepPink3 #d7005f rgb(215,0,95) hsl(33,100%,42%) 162 DeepPink3 #d70087 rgb(215,0,135) hsl(22,100%,42%) 163 Magenta3 #d700af rgb(215,0,175) hsl(11,100%,42%) 164 Magenta3 #d700d7 rgb(215,0,215) hsl(300,100%,42%) 165 Magenta2 #d700ff rgb(215,0,255) hsl(90,100%,50%) 166 DarkOrange3 #d75f00 rgb(215,95,0) hsl(6,100%,42%) 167 IndianRed #d75f5f rgb(215,95,95) hsl(0,60%,60%) 168 HotPink3 #d75f87 rgb(215,95,135) hsl(340,60%,60%) 169 HotPink2 #d75faf rgb(215,95,175) hsl(320,60%,60%) 170 Orchid #d75fd7 rgb(215,95,215) hsl(300,60%,60%) 171 MediumOrchid1 #d75fff rgb(215,95,255) hsl(285,100%,68%) 172 Orange3 #d78700 rgb(215,135,0) hsl(7,100%,42%) 173 LightSalmon3 #d7875f rgb(215,135,95) hsl(20,60%,60%) 174 LightPink3 #d78787 rgb(215,135,135) hsl(0,50%,68%) 175 Pink3 #d787af rgb(215,135,175) hsl(330,50%,68%) 176 Plum3 #d787d7 rgb(215,135,215) hsl(300,50%,68%) 177 Violet #d787ff rgb(215,135,255) hsl(280,100%,76%) 178 Gold3 #d7af00 rgb(215,175,0) hsl(8,100%,42%) 179 LightGoldenrod3 #d7af5f rgb(215,175,95) hsl(40,60%,60%) 180 Tan #d7af87 rgb(215,175,135) hsl(30,50%,68%) 181 MistyRose3 #d7afaf rgb(215,175,175) hsl(0,33%,76%) 182 Thistle3 #d7afd7 rgb(215,175,215) hsl(300,33%,76%) 183 Plum2 #d7afff rgb(215,175,255) hsl(270,100%,84%) 184 Yellow3 #d7d700 rgb(215,215,0) hsl(60,100%,42%) 185 Khaki3 #d7d75f rgb(215,215,95) hsl(60,60%,60%) 186 LightGoldenrod2 #d7d787 rgb(215,215,135) hsl(60,50%,68%) 187 LightYellow3 #d7d7af rgb(215,215,175) hsl(60,33%,76%) 188 Grey84 #d7d7d7 rgb(215,215,215) hsl(0,0%,84%) 189 LightSteelBlue1 #d7d7ff rgb(215,215,255) hsl(240,100%,92%) 190 Yellow2 #d7ff00 rgb(215,255,0) hsl(9,100%,50%) 191 DarkOliveGreen1 #d7ff5f rgb(215,255,95) hsl(75,100%,68%) 192 DarkOliveGreen1 #d7ff87 rgb(215,255,135) hsl(80,100%,76%) 193 DarkSeaGreen1 #d7ffaf rgb(215,255,175) hsl(90,100%,84%) 194 Honeydew2 #d7ffd7 rgb(215,255,215) hsl(120,100%,92%) 195 LightCyan1 #d7ffff rgb(215,255,255) hsl(180,100%,92%) 196 Red1 #ff0000 rgb(255,0,0) hsl(0,100%,50%) 197 DeepPink2 #ff005f rgb(255,0,95) hsl(37,100%,50%) 198 DeepPink1 #ff0087 rgb(255,0,135) hsl(28,100%,50%) 199 DeepPink1 #ff00af rgb(255,0,175) hsl(18,100%,50%) 200 Magenta2 #ff00d7 rgb(255,0,215) hsl(09,100%,50%) 201 Magenta1 #ff00ff rgb(255,0,255) hsl(300,100%,50%) 202 OrangeRed1 #ff5f00 rgb(255,95,0) hsl(2,100%,50%) 203 IndianRed1 #ff5f5f rgb(255,95,95) hsl(0,100%,68%) 204 IndianRed1 #ff5f87 rgb(255,95,135) hsl(345,100%,68%) 205 HotPink #ff5faf rgb(255,95,175) hsl(330,100%,68%) 206 HotPink #ff5fd7 rgb(255,95,215) hsl(315,100%,68%) 207 MediumOrchid1 #ff5fff rgb(255,95,255) hsl(300,100%,68%) 208 DarkOrange #ff8700 rgb(255,135,0) hsl(1,100%,50%) 209 Salmon1 #ff875f rgb(255,135,95) hsl(15,100%,68%) 210 LightCoral #ff8787 rgb(255,135,135) hsl(0,100%,76%) 211 PaleVioletRed1 #ff87af rgb(255,135,175) hsl(340,100%,76%) 212 Orchid2 #ff87d7 rgb(255,135,215) hsl(320,100%,76%) 213 Orchid1 #ff87ff rgb(255,135,255) hsl(300,100%,76%) 214 Orange1 #ffaf00 rgb(255,175,0) hsl(1,100%,50%) 215 SandyBrown #ffaf5f rgb(255,175,95) hsl(30,100%,68%) 216 LightSalmon1 #ffaf87 rgb(255,175,135) hsl(20,100%,76%) 217 LightPink1 #ffafaf rgb(255,175,175) hsl(0,100%,84%) 218 Pink1 #ffafd7 rgb(255,175,215) hsl(330,100%,84%) 219 Plum1 #ffafff rgb(255,175,255) hsl(300,100%,84%) 220 Gold1 #ffd700 rgb(255,215,0) hsl(0,100%,50%) 221 LightGoldenrod2 #ffd75f rgb(255,215,95) hsl(45,100%,68%) 222 LightGoldenrod2 #ffd787 rgb(255,215,135) hsl(40,100%,76%) 223 NavajoWhite1 #ffd7af rgb(255,215,175) hsl(30,100%,84%) 224 MistyRose1 #ffd7d7 rgb(255,215,215) hsl(0,100%,92%) 225 Thistle1 #ffd7ff rgb(255,215,255) hsl(300,100%,92%) 226 Yellow1 #ffff00 rgb(255,255,0) hsl(60,100%,50%) 227 LightGoldenrod1 #ffff5f rgb(255,255,95) hsl(60,100%,68%) 228 Khaki1 #ffff87 rgb(255,255,135) hsl(60,100%,76%) 229 Wheat1 #ffffaf rgb(255,255,175) hsl(60,100%,84%) 230 Cornsilk1 #ffffd7 rgb(255,255,215) hsl(60,100%,92%) 231 Grey100 #ffffff rgb(255,255,255) hsl(0,0%,100%) 232 Grey3 #080808 rgb(8,8,8) hsl(0,0%,3%) 233 Grey7 #121212 rgb(18,18,18) hsl(0,0%,7%) 234 Grey11 #1c1c1c rgb(28,28,28) hsl(0,0%,10%) 235 Grey15 #262626 rgb(38,38,38) hsl(0,0%,14%) 236 Grey19 #303030 rgb(48,48,48) hsl(0,0%,18%) 237 Grey23 #3a3a3a rgb(58,58,58) hsl(0,0%,22%) 238 Grey27 #444444 rgb(68,68,68) hsl(0,0%,26%) 239 Grey30 #4e4e4e rgb(78,78,78) hsl(0,0%,30%) 240 Grey35 #585858 rgb(88,88,88) hsl(0,0%,34%) 241 Grey39 #626262 rgb(98,98,98) hsl(0,0%,37%) 242 Grey42 #6c6c6c rgb(108,108,108) hsl(0,0%,40%) 243 Grey46 #767676 rgb(118,118,118) hsl(0,0%,46%) 244 Grey50 #808080 rgb(128,128,128) hsl(0,0%,50%) 245 Grey54 #8a8a8a rgb(138,138,138) hsl(0,0%,54%) 246 Grey58 #949494 rgb(148,148,148) hsl(0,0%,58%) 247 Grey62 #9e9e9e rgb(158,158,158) hsl(0,0%,61%) 248 Grey66 #a8a8a8 rgb(168,168,168) hsl(0,0%,65%) 249 Grey70 #b2b2b2 rgb(178,178,178) hsl(0,0%,69%) 250 Grey74 #bcbcbc rgb(188,188,188) hsl(0,0%,73%) 251 Grey78 #c6c6c6 rgb(198,198,198) hsl(0,0%,77%) 252 Grey82 #d0d0d0 rgb(208,208,208) hsl(0,0%,81%) 253 Grey85 #dadada rgb(218,218,218) hsl(0,0%,85%) 254 Grey89 #e4e4e4 rgb(228,228,228) hsl(0,0%,89%) 255 Grey93 #eeeeee rgb(238,238,238) hsl(0,0%,93%) " }, { "title": "WSL2 Jekyll installation Help", "url": "/posts/Ansible-Jinja2/", "categories": "Guide, Notes", "tags": "ansible, jinja2, guide", "date": "2022-08-21 00:00:00 +0200", "snippet": "Ansible Jinja2 helpersThis post is holding different good to know functions of Jinja2 templating. They are mainly for use with Ansible, but might work in any language that support jinja2 - like Python.Well Known (easy to find):The Default jinja2 clause:Lesser Known:Generate list from nested vars:somenestedvar: var1: - value1 - value2 var2: - value2 - value3 debug: msg: \" # generates a unique list of values from somenestedvar the .values() shows the values of the variable." }, { "title": "Upstream Projects", "url": "/posts/Upstream_projects/", "categories": "Blogging, Project", "tags": "links, opensource, redhat", "date": "2022-08-02 16:45:00 +0200", "snippet": "Upstream ProjectsThis section holds information regarding redhat upstream projects.Upstream projects are the opensource version of Redhat products.The upstream project is given without any support, and are not suitable for production use.Redhat: OpenShift Redhat Openshift upstram Project OKDRedhat: Ansible Automation Platform Redhat AAP Upstream project AWXRedhat: Identity Management (IDM) Redhat Identity Manager’s (IDM) upstream project FreeIPA Though having a redhat licens gives you the correct licens to use IDMRedhat: Virtualization Redhat virtualization upstream project oVirtLinux Distributions Redhat Family AlmaLinux RockyOS CentOS Debian Family Debian" }, { "title": "Cisco Anyconnect", "url": "/posts/cisco_anyconnect/", "categories": "Guide, Information", "tags": "it, software", "date": "2022-08-01 19:28:00 +0200", "snippet": "Cisco VPN AnyConnectProfile SetupGenerate a file called profile.xml within the respective path: Operating System Location Windows 8 %ProgramData%\\Cisco\\Cisco AnyConnect Secure Mobility Client\\Profile Windows 10 %ProgramData%\\Cisco\\Cisco AnyConnect Secure Mobility Client\\Profile Mac OS X /opt/cisco/anyconnect/profile Linux /opt/cisco/anyconnect/profile The profile.xml should look like this:&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;AnyConnectProfile xmlns=\"http://schemas.xmlsoap.org/encoding/\"&gt;    &lt;ServerList&gt;        &lt;HostEntry&gt;            &lt;User&gt;AUSER&lt;/User&gt;            &lt;HostName&gt;VPN NAME&lt;/HostName&gt;            &lt;HostAddress&gt;AHOSTADDED&lt;/HostAddress&gt;        &lt;/HostEntry&gt;        &lt;HostEntry&gt;            &lt;User&gt;AUSER&lt;/User&gt;            &lt;HostName&gt;VPN NAME&lt;/HostName&gt;            &lt;HostAddress&gt;AHOSTADDED&lt;/HostAddress&gt;        &lt;/HostEntry&gt;        &lt;HostEntry&gt;            &lt;User&gt;AUSER&lt;/User&gt;            &lt;HostName&gt;VPN NAME&lt;/HostName&gt;            &lt;HostAddress&gt;AHOSTADDED&lt;/HostAddress&gt;        &lt;/HostEntry&gt;    &lt;/ServerList&gt;&lt;/AnyConnectProfile&gt;" }, { "title": "Good Links", "url": "/posts/Links/", "categories": "Grafic, Links", "tags": "links, it, grafic", "date": "2022-07-29 15:30:00 +0200", "snippet": "Links For grafic arts, and items that might helpConverters Ezgif - converter and more Convertio - convert diffrent filesGifs Giphy - gif generatorSteam Backgrounds Backgrounds - SteamFree Logos, icons and more icons8 - favicons, png and more for free (but retricted) FreepikIT LinksWebdevelopmentWIKI Webpages Wiki.JSFrameworks Laravel DjangoICONS Generators Generate FaviconsOpensourceSNMP monitoring software Zabbix :: The Enterprise-Class Open Source Network Monitoring Solution Network Management - Castle Rock Computing - SNMPc Free SNMP Monitoring Software with SNMP v3 Support NetXMS - Open-source network and infrastructure monitoring and management system Pandora FMS: Opensource monitoring softwareCluster (DFS) Gluster - Storage for your CloudFirewall pfSense® - World’s Most Trusted Open Source Firewall OPNsense® a true open source security platform and more - OPNsense® is a true open source firewall and more Untangle: Network Security for SMBIntrusion Detection RITA SNORTIT Asset Management FOG Project (WIn, linux support) Snipe-IT Free open source IT asset management NetboxLDAP server OpenLDAP phpLDAPadminHypervisor XCP-ng ESXI Server - Maximum 1 CPU and 32 gb ram ARM ESXICluster management Kubernetes k8 and k3 OKD - upstream openshiftDatabase CoachroachDB MariaDBMisc Free ipv6 - tunnelbroker Syslog - ElasticAutomation Web app automation - PuppeteerSecurityInformation Gathering Shodan Snopes Have I been PwnedLearning materialIn this section i will provide links for free, and paid learning options.The option is something i have used to learn different skills.Hacking Beginner - overthewire Beginner - XSS web Mix - tryhackme Mix - hackthebox Eget lab - VulnHub Homemade CTFPentesting help Server: shodan Server: onyphe Server: censys Server: ivre OSINT: intelx.io Attack Surface: app.netlas Attack Surface: fullhunt Attack Surface: binaryedge Dorks: google Wifi Networks Codes Search: Grep Codes Search: Searchcode Codes Search: publicwww Threat Intelligence Threat Intelligence Threat Intelligence Threat Intelligence Threat Intelligence Threat Intelligence Threat Intelligence Threat Intelligence Email Addresses: hunter Certificate Search: crt Vulnerabilities: vulners" }, { "title": "Steam Guides", "url": "/posts/Steam-Guides/", "categories": "Steam, Information", "tags": "steam, artwork, information", "date": "2022-07-29 15:30:00 +0200", "snippet": "Steam GuidesThis little guide will hold different information in regards to Steam.All from how to generate a artwork on your profile, to generating a cfg file for CS: GO.Artwork guideCS: GOAutoexec.cfg and OptionsThis guides holds the configuration for generating a good CFG file for CS: GO.Lanch Options:+exec autoexec.cfg -novid -consoleAutoexec.cfg File generation. example location: ‘E:\\SteamLibrary\\steamapps\\common\\Counter-Strike Global Offensive\\csgo\\cfg’://weapon viewmodel viewmodel_fov \"65\"viewmodel_offset_x \"2\"viewmodel_offset_y \"2\"viewmodel_offset_z \"-2\"viewmodel_presetpos \"3\"cl_bob_lower_amt \"5\"cl_bobamt_lat \"0.1\"cl_bobamt_vert \"0.1\"cl_bobcycle \"0.98\"cl_viewmodel_shift_left_amt \"0.5\"cl_viewmodel_shift_right_amt \"0.25\"// Ratesrate \"128000\"cl_cmdrate \"128\"cl_updaterate \"128\"cl_interp \"0.0\"cl_interp_ratio \"1\"cl_lagcompensation \"1\"// Videofps_max \"350\"fps_max_menu \"200\"mat_monitorgamma \"1.8\"mat_queue_mode \"-1\" // auto detect multi-core renderingmat_vsync \"0\"r_dynamic \"0\"r_drawtracers_firstperson \"0\"mat_savechanges // write video settings to registrycl_disablefreezecam “1”cl_disablehtmlmotd “1”mat_savechanges// Bindsalias +fastswitch slot3; alias -fastswitch lastinv;bind \"q\" \"+fastswitch\" bind \"MWHEELUP\" \"+jump\" ;Use scroll to jumpbind \"MWHEELDOWN\" \"+jump\" ;Use scroll to jump alias \"+jumpthrow\" \"+jump;-attack;-attack2\"alias \"-jumpthrow\" \"-jump\"bind \"h\" \"+jumpthrow\" ;Jumpthrow bind for both left- and rightclickbind \"e\" \"+use; r_cleardecals\"// Removed// ;bind \"MOUSE1\" \"+attack; r_cleardecals\"" }, { "title": "Project Notes", "url": "/posts/project-notes/", "categories": "Homelab, Project", "tags": "project, labbing, multiple", "date": "2022-07-29 15:30:00 +0200", "snippet": "ProjectsThe following document contains different sections that will provide the reader with different knowledge of what the different projects can enhance.It will also contain some setup intructions.Homelab - lab.localThe following section is the homelab i use.Domain: lab.localimg 1 - Homelab setupThe servers will have different functions (look the writing on the drawing about). Thnis includes LDAP services, ansible, laravel and mariadb.The Windows server serves one purpose, and thats as a ansible client.Personal Project linksSetup guidesAutomationPuppeteer - Web app automation" }, { "title": "WSL2 Jekyll installation Help", "url": "/posts/wsl/", "categories": "Guide, Development", "tags": "dev, wsl, guide", "date": "2022-06-29 00:00:00 +0200", "snippet": "Config helpsudo apt-get update -y &amp;&amp; sudo apt-get upgrade -ysudo apt install ruby-fullsudo apt-get install make gcc gpp build-essential zlib1g zlib1g-dev ruby-dev dh-autoreconfsudo gem updatesudo gem install bundler# if you get errors (as I've done), go back to the start and go through these commands again#sudo gem install jekyll# inside jekyll repobundle install# simple servebundle exec jekyll serve" } ]
